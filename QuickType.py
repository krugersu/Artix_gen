# Generated by https://quicktype.io
#
# To change quicktype's target language, run command:
#
#   "Set quicktype target language"

from typing import Dict, List, Any
from datetime import datetime


class Priceoptions:
    enablepricemanual: bool
    requirepricemanual: bool
    requireselectprice: bool
    requiredeferredprice: bool
    enableexcisemarkprice: bool

    def __init__(self, enablepricemanual: bool, requirepricemanual: bool, requireselectprice: bool, requiredeferredprice: bool, enableexcisemarkprice: bool) -> None:
        self.enablepricemanual = enablepricemanual
        self.requirepricemanual = requirepricemanual
        self.requireselectprice = requireselectprice
        self.requiredeferredprice = requiredeferredprice
        self.enableexcisemarkprice = enableexcisemarkprice


class Quantityoptions:
    enabledefaultquantity: bool
    enablequantitylimit: bool
    quantitylimit: float
    enablequantityscales: bool
    enablequantitybarcode: bool
    enablequantitymanual: bool
    requirequantitymanual: bool
    requirequantitybarcode: bool
    requirequantityscales: bool
    documentquantlimit: float
    enabledocumentquantitylimit: int
    autogetquantityfromscales: bool

    def __init__(self, enabledefaultquantity: bool, enablequantitylimit: bool, quantitylimit: float, enablequantityscales: bool, enablequantitybarcode: bool, enablequantitymanual: bool, requirequantitymanual: bool, requirequantitybarcode: bool, requirequantityscales: bool, documentquantlimit: float, enabledocumentquantitylimit: int, autogetquantityfromscales: bool) -> None:
        self.enabledefaultquantity = enabledefaultquantity
        self.enablequantitylimit = enablequantitylimit
        self.quantitylimit = quantitylimit
        self.enablequantityscales = enablequantityscales
        self.enablequantitybarcode = enablequantitybarcode
        self.enablequantitymanual = enablequantitymanual
        self.requirequantitymanual = requirequantitymanual
        self.requirequantitybarcode = requirequantitybarcode
        self.requirequantityscales = requirequantityscales
        self.documentquantlimit = documentquantlimit
        self.enabledocumentquantitylimit = enabledocumentquantitylimit
        self.autogetquantityfromscales = autogetquantityfromscales


class Options:
    quantityoptions: Quantityoptions
    priceoptions: Priceoptions
    inventitemoptions: Dict[str, bool]

    def __init__(self, quantityoptions: Quantityoptions, priceoptions: Priceoptions, inventitemoptions: Dict[str, bool]) -> None:
        self.quantityoptions = quantityoptions
        self.priceoptions = priceoptions
        self.inventitemoptions = inventitemoptions


class Invent:
    inventcode: str
    name: str
    barcode: str
    barcodes: List[Any]
    price: float
    minprice: float
    options: Options
    extendedoptions: str
    discautoscheme: int
    deptcode: int
    measurecode: int
    articul: int
    defaultquantity: float
    cquant: float
    inventgroup: str
    remain: float
    remaindate: datetime
    lvatcode: List[int]
    taramode: int
    taracapacity: float
    alcoholpercent: float
    alctypecode: int
    loyaltymode: int

    def __init__(self, inventcode: str, name: str, barcode: str, barcodes: List[Any], price: float, minprice: float, options: Options, extendedoptions: str, discautoscheme: int, deptcode: int, measurecode: int, articul: int, defaultquantity: float, cquant: float, inventgroup: str, remain: float, remaindate: datetime, lvatcode: List[int], taramode: int, taracapacity: float, alcoholpercent: float, alctypecode: int, loyaltymode: int) -> None:
        self.inventcode = inventcode
        self.name = name
        self.barcode = barcode
        self.barcodes = barcodes
        self.price = price
        self.minprice = minprice
        self.options = options
        self.extendedoptions = extendedoptions
        self.discautoscheme = discautoscheme
        self.deptcode = deptcode
        self.measurecode = measurecode
        self.articul = articul
        self.defaultquantity = defaultquantity
        self.cquant = cquant
        self.inventgroup = inventgroup
        self.remain = remain
        self.remaindate = remaindate
        self.lvatcode = lvatcode
        self.taramode = taramode
        self.taracapacity = taracapacity
        self.alcoholpercent = alcoholpercent
        self.alctypecode = alctypecode
        self.loyaltymode = loyaltymode


class Test:
    invent: Invent

    def __init__(self, invent: Invent) -> None:
        self.invent = invent
